<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="POS" default="build">

	<!-- Definitions of variables used during the rest of this script -->

	<property file="build.properties" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="libs.dir" value="${basedir}/lib" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="conf.dir" value="${basedir}/conf" />
	<property name="doc.dir" value="${build.dir}/doc" />
	<property name="test.reports.dir" value="${build.dir}/reports/" />
	<property environment="env" />
	<property name="java.libs" value="${env.JAVA_HOME}/jre/lib" />
	<property name="java.fx.path" value="${java.libs}/jfxrt.jar" />
	
	<property name="lib.dir" value="${basedir}/lib"/>

	<!-- database variables -->
	<property name="data.dir"	value="${basedir}/data"/>
	<property name="db.file"	value="${data.dir}/POSdb"/>
	<property name="db.alias"	value="POS"/>
	<property name="db.url" 	value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"   value="${lib.dir}/hibernate"/>

	<!-- Definitions of classpath variants used for different tasks -->
	
	<path id="run.classpath">
	        <pathelement location="${build.classes.dir}"/>
	        <!-- configuration -->
	        <pathelement location="${conf.dir}"/>
	        <fileset dir="${lib.dir}">
	            <include name="*.jar"/>
	        </fileset>
	        <fileset dir="${lib.hibernate.dir}">
	            <include name="*.jar"/>
	        </fileset>
	</path>
	
	<path id="compile.classpath">
		<pathelement location="${conf.dir}"/>
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
		 <fileset dir="${lib.hibernate.dir}">
		    <include name="*.jar"/>
		 </fileset>
	</path>

	<path id="test.classpath">
		<pathelement location="${build.classes.dir}" />
		<!-- configuration -->
		<pathelement location="${conf.dir}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<!-- Targets -->
	
	<target name="dbmanager" description="Start the HSQLDB manager">
	        <java
	            classname="org.hsqldb.util.DatabaseManagerSwing"
	            classpathref="run.classpath"
	            fork="yes">
	            <arg line="--user sa --url ${db.url}" />
	        </java>
	    </target>

	<target name="startdb" description="Start the HSQLDB with the default params">
	        <java
	            classname="org.hsqldb.Server"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
	        </java>
	</target>

	<target name="run" depends="build" description="Run the template application">
		 <java
		 	classname="ee.ut.math.tvt.tiim_number_kaks.Intro"
		      classpathref="run.classpath"
		      fork="yes">
		    <jvmarg value="-Xdebug" />
		 	<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		 </java>
	</target>

	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.tiim_number_kaks.Intro" classpathref="test.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>
	
	<target name="build" description="Build the system">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />

		<copy todir="${build.classes.dir}/ee/ut/math/tvt/tiim_number_kaks/">
			<fileset dir="${basedir}">
				<include name="*.properties" />
			</fileset>
		</copy>
		<copy file="${src.dir}/ee/ut/math/tvt/tiim_number_kaks/number.png"
			todir="${build.classes.dir}/ee/ut/math/tvt/tiim_number_kaks/" />
		
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="off" optimize ="true"
			encoding="utf-8" compiler="modern"
			target="1.7" source="1.7" includeantruntime="false">
			<classpath refid="compile.classpath" />
		</javac>

	</target>

	<!-- Build internal documentation -->
	<target name="javadoc" description="Build internal documentation">
		<mkdir dir="${doc.dir}" />
		<javadoc destdir="${doc.dir}" classpathref="compile.classpath">
			<fileset dir="${src.dir}" includes="**/*.java" />
		</javadoc>
	</target>

	<target name="dist" depends="build" description="Build jar file">
		<jar destfile="${build.dir}/jar/tiim_number_kaks.jar" basedir="${build.classes.dir}">
			<zipgroupfileset dir="${java.libs}" includes="jfxrt.jar" />
			<zipgroupfileset dir="${libs.dir}" includes="**/*.jar" />
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.tiim_number_kaks.Intro" />
			</manifest>
		</jar>
		<buildnumber file="version.properties" />
	</target>

	<target name="jrun" depends="dist">
		<java jar="${build.dir}/jar/tiim_number_kaks.jar" fork="yes" />
	</target>

	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}" />
	</target>
	
	<macrodef name = "git">
	    <attribute name = "command" />
	    <attribute name = "dir" default = "" />
	    <element name = "args" optional = "true" />
	    <sequential>
	        <echo message = "git @{command}" />
	        <exec executable = "git" dir = "@{dir}">
	            <arg value = "@{command}" />
	            <args/>
	        </exec>
	    </sequential>
	</macrodef>
	 <!--hrhtrhtr-->
		<target name="git_commit" description="Commits all changes to git">
			<input message="Commit message" addproperty="commit-message" />
			
			<echo message="Commiting all changes with message ${commit-message}" />
			<git command="add">
				<args>
					<arg value="-A" />
				</args>
			</git>
			<git command="commit">
				<args>
					<arg value="-m ${commit-message}" />
				</args>
			</git>
			<input message="username" addproperty="username"/>
			<input message="password" addproperty="password"/>
			<git command="push">
				<args>
					<arg value="https://${username}:${password}@github.com/lucyhilltop/Tiim-Number-Kaks.git"/>
				</args>
			</git>
		</target>
		
		<target name="git_tag" description="Creates a tag and syncs it with github">
			<input message="Tag name" addproperty= "homework_n"/>
			<input message="Comment" addproperty="comment"/>
			<git command="tag">
				<args>
					<arg line="-a ${homework_n} -m &quot;${comment}&quot;"/>
				</args>
			</git>
			<input message="username" addproperty="username"/>
			<input message="password" addproperty="password"/>
				<git command="push">
					<args>
						<arg line="--tags https://${username}:${password}@github.com/lucyhilltop/Tiim-Number-Kaks.git"/>
					</args>
				</git>
		</target>
			

</project>

